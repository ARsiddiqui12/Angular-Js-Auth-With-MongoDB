{"ast":null,"code":"import { of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isUserLoggedIn = false;\n  }\n  login(userName, password) {\n    console.log(userName);\n    console.log(password);\n    this.isUserLoggedIn = userName == 'admin' && password == 'admin';\n    localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\");\n    return of(this.isUserLoggedIn).pipe(delay(1000), tap(val => {\n      console.log(\"Is User Authentication is successful: \" + val);\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AAErC,SAASC,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;;AAO3C,OAAM,MAAOC,WAAW;EAEtBC;IAEA,mBAAc,GAAY,KAAK;EAFf;EAIhBC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IAEtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAI,CAACG,cAAc,GAAGJ,QAAQ,IAAI,OAAO,IAAIC,QAAQ,IAAI,OAAO;IAChEI,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAACF,cAAc,GAAG,MAAM,GAAG,OAAO,CAAC;IAE9E,OAAOV,EAAE,CAAC,IAAI,CAACU,cAAc,CAAC,CAACG,IAAI,CAC/BX,KAAK,CAAC,IAAI,CAAC,EACXD,GAAG,CAACa,GAAG,IAAG;MACRN,OAAO,CAACC,GAAG,CAAC,wCAAwC,GAAGK,GAAG,CAAC;IAC7D,CAAC,CAAC,CACL;EAEJ;;AApBYX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAHV;AAAM","names":["of","tap","delay","AuthService","constructor","login","userName","password","console","log","isUserLoggedIn","localStorage","setItem","pipe","val","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\angularjs\\authapp\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { tap, delay } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor() { }\n\n  isUserLoggedIn: boolean = false;\n\n  login(userName: string, password: string): Observable<any> {\n\n    console.log(userName);\n    console.log(password);\n    this.isUserLoggedIn = userName == 'admin' && password == 'admin';\n    localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\"); \n\n    return of(this.isUserLoggedIn).pipe(\n        delay(1000),\n        tap(val => { \n          console.log(\"Is User Authentication is successful: \" + val); \n        })\n    );\n    \n }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
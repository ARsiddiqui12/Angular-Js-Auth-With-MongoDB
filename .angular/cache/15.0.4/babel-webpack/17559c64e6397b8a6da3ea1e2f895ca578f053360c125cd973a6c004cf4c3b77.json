{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isUserLoggedIn = false;\n  }\n  //    httpOptions = {\n  //     headers: new HttpHeaders( { \n  //       'Content-Type': 'application/json',\n  //                 'Access-Control-Allow-Origin': '*',\n  //                 'Access-Control-Allow-Credentials': 'true',\n  //                 'Access-Control-Allow-Headers': 'Content-Type',\n  //                 'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n  //     })\n  //  };\n  login(userName, password) {\n    console.log(userName);\n    console.log(password);\n    //   this.http.post(\"http://localhost:8081/login/check\",{userName:userName,password:password}, this.httpOptions) \n    //  .pipe( \n    //     retry(1), \n    //     catchError(this.httpErrorHandler)) \n    //  .subscribe( (data) => console.log(data,\"hello world\") )\n    //   this.isUserLoggedIn = userName == 'admin' && password == 'admin';\n    //   localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\"); \n    //   return of(this.isUserLoggedIn).pipe(\n    //       delay(1000),\n    //       tap(val => { \n    //         console.log(\"Is User Authentication is successful: \" + val); \n    //       })\n    //   );\n  }\n\n  logout() {\n    this.isUserLoggedIn = false;\n    localStorage.removeItem('isUserLoggedIn');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAeA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAExB,mBAAc,GAAY,KAAK;EAFQ;EAIzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIEC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IAEtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAEvB;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;EAED;;EAEAG,MAAM;IACL,IAAI,CAACC,cAAc,GAAG,KAAK;IACxBC,YAAY,CAACC,UAAU,CAAC,gBAAgB,CAAC;EAC5C;;AA5CWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAHV;AAAM","names":["AuthService","constructor","http","login","userName","password","console","log","logout","isUserLoggedIn","localStorage","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\angularjs\\authapp\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { Observable, of, throwError  } from 'rxjs';\n\nimport { tap, delay } from 'rxjs/operators';\n\nimport { catchError, retry } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private http:HttpClient) { }\n\n  isUserLoggedIn: boolean = false;\n\n//    httpOptions = {\n//     headers: new HttpHeaders( { \n//       'Content-Type': 'application/json',\n//                 'Access-Control-Allow-Origin': '*',\n//                 'Access-Control-Allow-Credentials': 'true',\n//                 'Access-Control-Allow-Headers': 'Content-Type',\n//                 'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n//     })\n//  };\n\n \n\n  login(userName: string, password: string): Observable<any> {\n\n    console.log(userName);\n    console.log(password);\n\n  //   this.http.post(\"http://localhost:8081/login/check\",{userName:userName,password:password}, this.httpOptions) \n  //  .pipe( \n  //     retry(1), \n  //     catchError(this.httpErrorHandler)) \n  //  .subscribe( (data) => console.log(data,\"hello world\") )\n\n  //   this.isUserLoggedIn = userName == 'admin' && password == 'admin';\n  //   localStorage.setItem('isUserLoggedIn', this.isUserLoggedIn ? \"true\" : \"false\"); \n\n  //   return of(this.isUserLoggedIn).pipe(\n  //       delay(1000),\n  //       tap(val => { \n  //         console.log(\"Is User Authentication is successful: \" + val); \n  //       })\n  //   );\n    \n }\n\n logout() {\n  this.isUserLoggedIn = false;\n     localStorage.removeItem('isUserLoggedIn'); \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
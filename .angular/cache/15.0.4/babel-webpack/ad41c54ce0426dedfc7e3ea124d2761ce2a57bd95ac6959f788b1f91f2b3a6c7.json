{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class MiddlewareGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    let url = state.url;\n    return this.checkLogin(url);\n  }\n  checkLogin(url) {\n    console.log(\"Url: \" + url);\n    let val = localStorage.getItem('isUserLoggedIn');\n    if (val != null && val == \"true\") {\n      if (url == \"/login\") this.router.parseUrl('/expenses');else return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\nMiddlewareGuard.ɵfac = function MiddlewareGuard_Factory(t) {\n  return new (t || MiddlewareGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nMiddlewareGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MiddlewareGuard,\n  factory: MiddlewareGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAEvB,IAAIC,GAAG,GAAGD,KAAK,CAACC,GAAG;IAEnB,OAAO,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC;EAE3B;EAELC,UAAU,CAACD,GAAW;IAEpBE,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGH,GAAG,CAAC;IAE1B,IAAII,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAEhD,IAAGF,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAI,MAAM,EAAC;MAC7B,IAAGJ,GAAG,IAAI,QAAQ,EACf,IAAI,CAACJ,MAAM,CAACW,QAAQ,CAAC,WAAW,CAAC,CAAC,KAElC,OAAO,IAAI;KAChB,MAAM;MACJ,OAAO,IAAI,CAACX,MAAM,CAACW,QAAQ,CAAC,QAAQ,CAAC;;EAE3C;;AA5BYd,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["MiddlewareGuard","constructor","authService","router","canActivate","next","state","url","checkLogin","console","log","val","localStorage","getItem","parseUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\angularjs\\authapp\\src\\app\\middleware.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MiddlewareGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): any | UrlTree {\n\n       let url = state.url;\n \n       return this.checkLogin(url);\n\n       }\n\n  checkLogin(url: string){\n    \n    console.log(\"Url: \" + url);\n\n    let val = localStorage.getItem('isUserLoggedIn');\n\n    if(val != null && val == \"true\"){\n       if(url == \"/login\")\n          this.router.parseUrl('/expenses');\n       else \n          return true;\n    } else {\n       return this.router.parseUrl('/login');\n    }\n }\n\n  \n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}